import * as fs from 'node:fs/promises';
import * as crypto from 'crypto';
import * as path from 'path';

const KEY_FIELD_NAME = 'ENCRYPT_PRIVATE_KEY';

async function generateKey() {
  const key = crypto.randomBytes(16).toString('hex');

  const envPath = path.resolve(process.cwd(), '.env');

  let envContent = '';

  await fs.access(envPath);

  envContent = await fs.readFile(envPath, 'utf8');

  if (envContent.includes(KEY_FIELD_NAME)) {
    console.log(`üîë –ö–ª—é—á ${KEY_FIELD_NAME} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ .env`);
    return;
  }

  const newEnvContent = `${envContent.trim()}\n${KEY_FIELD_NAME}=${key}\n`;
  await fs.writeFile(envPath, newEnvContent, 'utf8');

  console.log('‚úÖ –ö–ª—é—á —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ .env');
}

generateKey().catch((err) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª—é—á–∞:', err.message);
});
